{"version":3,"sources":["shared/ApiProgress.js","api/apiCalls.js","components/input.js","components/ButtonWithProgress.js","redux/Constants.js","redux/authActions.js","pages/UserSignUpPage.js","pages/LoginPage.js","components/LanguageSelector.js","assets/profile.png","components/ProfileImageWithDefault.js","components/Modal.js","components/HoaxView.js","components/Spinner.js","components/HoaxFeed.js","components/AutoUploadImage.js","components/HoaxSubmit.js","components/UserListItem.js","components/UserList.js","pages/HomePage.js","components/ProfileCard.js","pages/UserPage.js","assets/hoaxify.png","components/TopBar.js","container/App.js","reportWebVitals.js","i18n.js","redux/authReducer.js","redux/configureStore.js","index.js"],"names":["useApiProgress","apiMethod","apiPath","strictPath","useState","pendingApiCall","setPendingApiCall","useEffect","requestInterceptor","responseInterceptor","updateApiCallFor","method","url","inProgress","startsWith","axios","interceptors","request","use","response","config","error","eject","getUsers","page","size","get","setAuthorizationHeader","isLoggedIn","token","authorizationHeaderValue","defaults","headers","getUser","username","updateUser","body","put","postHoax","hoax","post","getHoaxes","path","getOldHoaxes","id","getNewHoaxCount","getNewHoaxes","postHoaxAttachment","attachment","deleteHoax","delete","deleteUser","Input","props","label","name","onChange","type","defaultValue","className","undefined","ButtonWithProgress","onClick","disabled","text","LOGOUT_SUCCESS","LOGIN_SUCCESS","UPDATE_SUCCESS","logoutSuccess","dispatch","a","ACTIONS","loginSuccess","authState","payload","updateSuccess","displayName","image","loginHandler","credentials","creds","data","user","password","signupHandler","UserSignUpPage","passwordRepeatError","passwordRepeat","errors","form","setForm","useDispatch","setErrors","event","target","value","previousError","previousForm","onClickSignup","preventDefault","history","push","validationErrors","t","useTranslation","usernameError","displayNameError","passwordError","pendingApiCallSignup","pendingApiCallLogin","LoginPage","setUsername","setPassword","setError","onClickLogin","message","buttonEnabled","LanguageSelector","i18n","onChangeLanguage","language","changeLanguage","src","alt","style","cursor","ProfileImageWithDefault","tempimage","imageSource","defaultPicture","onError","Modal","visible","onClickCancel","onClickOk","title","okButton","backgroundColor","HoaxView","loggedInUser","useSelector","store","onDeleteHoax","content","timestamp","fileAttachment","formatted","format","modalVisible","setModalVisible","ownedByLoggedInUser","onClickDelete","width","height","to","fileType","Spinner","HoaxFeed","last","number","hoaxPage","setHoaxPage","newHoaxCount","setNewHoaxCount","useParams","initialHoaxLoadProgress","lastHoaxId","firstHoaxId","length","lastHoaxIndex","oldHoaxPath","loadOldHoaxesProgress","newHoaxPath","loadNewHoaxesProgress","looper","setInterval","count","clearInterval","previousHoaxPage","loadHoaxes","loadOldHoaxes","loadNewHoaxes","onDeleteHoaxSuccess","filter","map","AutoUploadImage","uploading","position","opacity","HoaxSubmit","focused","setFocused","setHoax","newImage","setNewImage","attachmentId","setAttachmentId","pendingFileUpload","hoaxify","uploadFile","file","FormData","append","textAreaClass","rows","onFocus","files","fileReader","FileReader","onloadend","result","readAsDataURL","UserListItem","UserList","setPage","loadFailure","setLoadFailure","loadUsers","users","first","actionDiv","previousPage","nextPage","HomePage","ProfileCard","inEditMode","setInEditMode","updatedDisplayName","setUpdatedDisplayName","loggedInUsername","routeParams","setUser","editable","setEditable","setValidationErrors","useHistory","pathUserName","previousValidationErrors","onClickSave","split","pendingDeleteUserApiCall","imageError","UserPage","notFound","setNotFound","loadUser","fontSize","TopBar","menuArea","useRef","menuVisible","setMenuVisible","document","addEventListener","menuClickTracker","removeEventListener","current","contains","links","dropDownClass","ref","logo","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initReactI18next","init","resources","en","translations","tr","fallbackLng","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","register","index","defaultState","authReducer","state","action","secureLs","SecureLS","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","subscribe","newState","getState","set","configureStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.687b553c.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nexport const useApiProgress = (apiMethod, apiPath, strictPath) => {\r\n    const [pendingApiCall, setPendingApiCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let requestInterceptor, responseInterceptor;\r\n        const updateApiCallFor = (method, url, inProgress) => {\r\n            if(method !== apiMethod){\r\n                return;\r\n            }\r\n            if (strictPath && url === apiPath) {\r\n                setPendingApiCall(inProgress);\r\n            }else if(!strictPath && url.startsWith(apiPath)){\r\n                setPendingApiCall(inProgress);\r\n            }\r\n        }\r\n\r\n        const registerInterceptors = () => {\r\n            requestInterceptor = axios.interceptors.request.use((request) => {\r\n                const { url, method} = request;\r\n                updateApiCallFor(method, url, true);\r\n                return request;\r\n\r\n            })\r\n\r\n            responseInterceptor = axios.interceptors.response.use(response => {\r\n                const { url, method} = response.config;\r\n                updateApiCallFor(method, url, false);\r\n                return response;\r\n            }, error => {\r\n                const { url, method} = error.config;\r\n                updateApiCallFor(method, url, false);\r\n                throw error;\r\n            }\r\n            );\r\n        };\r\n\r\n        const unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(requestInterceptor);\r\n            axios.interceptors.request.eject(responseInterceptor);\r\n        }\r\n\r\n\r\n        registerInterceptors();\r\n\r\n\r\n        return function unmount() {\r\n            unregisterInterceptors();\r\n        }\r\n    }, [apiPath, apiMethod, strictPath]);\r\n\r\n\r\n    return pendingApiCall;\r\n}","import axios from \"axios\";\r\n\r\nexport const signup = (body) => {\r\n    return axios.post(\"/api/1.0/users\", body);\r\n};\r\n\r\nexport const login = creds => {\r\n    return axios.post('/api/1.0/auth',creds);\r\n}\r\n\r\nexport const logout = () => {\r\n    return axios.post('/api/1.0/logout');\r\n}\r\n\r\nexport const changeLanguage = language => {\r\n    axios.defaults.headers['accept-language'] = language;\r\n}\r\n\r\nexport const getUsers = (page = 0, size = 3) => {\r\n\r\n    return axios.get(`/api/1.0/users?page=${page}&size=${size}`);\r\n};\r\n\r\nexport const setAuthorizationHeader = ({ isLoggedIn, token }) => {\r\n    if (isLoggedIn) {\r\n        const authorizationHeaderValue = `Bearer ${token}`;\r\n        axios.defaults.headers['Authorization'] = authorizationHeaderValue;\r\n    } else {\r\n        delete axios.defaults.headers['Authorization'];\r\n    }\r\n\r\n}\r\n\r\nexport const getUser = (username) => {\r\n    return axios.get(`/api/1.0/users/${username}`);\r\n}\r\n\r\nexport const updateUser = (username, body) => {\r\n    return axios.put(`/api/1.0/users/${username}`, body);\r\n}\r\n\r\nexport const postHoax = (hoax) => {\r\n    return axios.post('/api/1.0/hoaxes', hoax);\r\n}\r\n\r\nexport const getHoaxes = (username, page = 0) => {\r\n    const path = username ? `/api/1.0/users/${username}/hoaxes?page=`: '/api/1.0/hoaxes?page=';\r\n    return axios.get(path+page);\r\n}\r\n\r\nexport const getOldHoaxes = (id, username) => {\r\n    const path = username ? `/api/1.0/users/${username}/hoaxes/${id}`: '/api/1.0/hoaxes/'+id;\r\n    return axios.get(path);\r\n}\r\n\r\nexport const getNewHoaxCount = (id, username) => {\r\n    const path = username ? `/api/1.0/users/${username}/hoaxes/${id}?count=true`: `/api/1.0/hoaxes/${id}?count=true`;\r\n    return axios.get(path);\r\n}\r\n\r\nexport const getNewHoaxes = (id, username) => {\r\n    const path = username ? `/api/1.0/users/${username}/hoaxes/${id}?direction=after`: `/api/1.0/hoaxes/${id}?direction=after`;\r\n    return axios.get(path);\r\n}\r\n\r\nexport const postHoaxAttachment = attachment => {\r\n    return axios.post('/api/1.0/hoax-attachments', attachment);\r\n}\r\n\r\nexport const deleteHoax = id => {\r\n    return axios.delete(`/api/1.0/hoaxes/${id}`)\r\n}\r\n\r\nexport const deleteUser = username => {\r\n    return axios.delete(`/api/1.0/users/${username}`)\r\n}","import React from \"react\";\r\n\r\nconst Input = (props) => {\r\n    const {label, error, name, onChange, type,defaultValue} = props;\r\n    let className = 'form-control';\r\n    \r\n    if(type === 'file'){\r\n        className += '-file';\r\n    }\r\n    if(error !==undefined){\r\n        className += ' is-invalid';\r\n    }\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label>{label}</label>\r\n            <input className={className} name={name} onChange={onChange} type={type} defaultValue={defaultValue}/>\r\n            <div className=\"invalid-feedback\">\r\n                {error}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst ButtonWithProgress = (props) => {\r\n    const {onClick, pendingApiCall, disabled, text, className} = props;\r\n    return (\r\n        <button className={className || \"btn btn-primary\"} onClick={onClick}\r\n                                disabled={disabled}>\r\n                            {pendingApiCall && <span className=\"spinner-border spinner-border-sm\"></span>}\r\n                            {text}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ButtonWithProgress;","export const LOGOUT_SUCCESS = 'logout-success';\r\nexport const LOGIN_SUCCESS = 'login-success';\r\nexport const UPDATE_SUCCESS = 'update-success';","import * as ACTIONS from './Constants'\r\nimport { login, signup, logout } from '../api/apiCalls'\r\n\r\nexport const logoutSuccess = () => {\r\n\r\n\r\n    return async function(dispatch){\r\n        try{\r\n            await logout();\r\n        }catch(err){\r\n\r\n        }\r\n        dispatch({\r\n            type: ACTIONS.LOGOUT_SUCCESS\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const loginSuccess = (authState) => {\r\n\r\n    return {\r\n        type: ACTIONS.LOGIN_SUCCESS,\r\n        payload: authState\r\n    };\r\n}\r\n\r\nexport const updateSuccess = ({displayName, image}) => {\r\nreturn {\r\n    type:ACTIONS.UPDATE_SUCCESS,\r\n    payload :{\r\n        displayName, image\r\n    }\r\n\r\n}\r\n}\r\n\r\nexport const loginHandler = (credentials) => {\r\n\r\n    return async function (dispatch) {\r\n        const response = await login(credentials);\r\n\r\n        const authState = {\r\n            ...response.data.user,\r\n            password: credentials.password,\r\n            token: response.data.token\r\n        };\r\n\r\n        dispatch(loginSuccess(authState));\r\n        return response;\r\n    };\r\n};\r\n\r\nexport const signupHandler = (user) => {\r\n\r\n    return async function (dispatch) {\r\n        const response = await signup(user);\r\n        await dispatch(loginHandler(user));\r\n        return response;\r\n    };\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { signup } from '../api/apiCalls'\r\nimport Input from \"../components/input\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress'\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport { useDispatch, } from 'react-redux'\r\nimport { loginHandler, signupHandler } from '../redux/authActions'\r\n\r\nconst UserSignUpPage = (props) => {\r\n\r\n    const [form, setForm] = useState({\r\n        username: null,\r\n        displayName: null,\r\n        password: null,\r\n        passwordRepeat: null,\r\n        errors: {}\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    // state = {\r\n    //     username: null,\r\n    //     displayName: null,\r\n    //     password: null,\r\n    //     passwordRepeat: null,\r\n    //     errors: {}\r\n    // };\r\n\r\n    const onChange = event => {\r\n\r\n        const { name, value } = event.target;\r\n\r\n        const errorsCopy = { ...errors };\r\n        errorsCopy[name] = undefined;\r\n        setErrors((previousError) => ({ ...previousError, [name] :undefined}));\r\n        setForm((previousForm) => ({ ...previousForm, [name]: value }));\r\n    };\r\n\r\n    const onClickSignup = async event => {\r\n        event.preventDefault();\r\n\r\n        const { history } = props;\r\n        const { push } = history;\r\n\r\n        const { username, displayName, password } = form;\r\n\r\n        const body = { username, displayName, password };\r\n\r\n        try {\r\n            await dispatch(signupHandler(body));\r\n            push('/');\r\n        } catch (error) {\r\n            if (error.response.data.validationErrors) {\r\n                // this.setState({ errors: error.response.data.validationErrors });\r\n                setErrors(error.response.data.validationErrors);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    const { t } = useTranslation();\r\n    const { username: usernameError, displayName: displayNameError, password: passwordError } = errors;\r\n    const pendingApiCallSignup  = useApiProgress('post','/api/1.0/users');\r\n    const pendingApiCallLogin  = useApiProgress('post','/api/1.0/login');\r\n\r\n    const pendingApiCall = pendingApiCallSignup || pendingApiCallLogin;\r\n\r\n\r\n    let passwordRepeatError;\r\n    if(form.password !== form.passwordRepeat){\r\n        passwordRepeatError = t('Password mismatch');\r\n    } \r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <form>\r\n                <h1 className=\"text-center\">{t('Sign Up')}</h1>\r\n                <Input name=\"username\" label={t('User Name')} error={usernameError} onChange={onChange} />\r\n                <Input name=\"displayName\" label={t('Display Name')} error={displayNameError} onChange={onChange} />\r\n                <Input name=\"password\" label={t('Password')} error={passwordError} onChange={onChange} type=\"password\" />\r\n                <Input name=\"passwordRepeat\" label={t('Password Repeat')} error={passwordRepeatError} onChange={onChange} type=\"password\" />\r\n\r\n                <div className=\"text-center\">\r\n\r\n                    <ButtonWithProgress className=\"btn btn-primary\" onClick={onClickSignup}\r\n                        disabled={pendingApiCall || passwordRepeatError !== undefined} text={t('Sign Up')} pendingApiCall={pendingApiCall}>\r\n                    </ButtonWithProgress>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserSignUpPage;","import React, { useEffect, useState } from 'react';\r\nimport Input from '../components/input'\r\nimport { useTranslation } from 'react-i18next'\r\nimport ButtonWithProgress from '../components/ButtonWithProgress'\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\n// import {Authentication} from '../shared/AuthenticationContext'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginHandler } from '../redux/authActions'\r\n\r\nconst LoginPage = (props) => {\r\n    // static contextType = Authentication;\r\n\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const dispatch  = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        setError(undefined);\r\n    }, [username, password]);\r\n\r\n\r\n    const onClickLogin = async event => {\r\n        event.preventDefault();\r\n        const creds = {\r\n            username, password\r\n        }\r\n\r\n        const { history } = props;\r\n        const { push } = history;\r\n        setError(undefined);\r\n        try {\r\n            await dispatch(loginHandler(creds));\r\n            push('/');\r\n        } catch (apiError) {\r\n            setError(apiError.response.data.message);\r\n        }\r\n    };\r\n\r\n    const pendingApiCall  = useApiProgress('post','/api/1.0/auth');\r\n    const { t } = useTranslation();\r\n\r\n    const buttonEnabled = username && password && !error;\r\n    return (\r\n        <div className=\"container\">\r\n            <form>\r\n                <h1 className=\"text-center\">{t('Login')}</h1>\r\n                <Input label={t(\"User Name\")} onChange={(event) => { setUsername(event.target.value);  }}></Input>\r\n                <Input label={t(\"Password\")} type=\"password\" onChange={(event) => { setPassword(event.target.value); }}></Input>\r\n                {error &&\r\n                    <div className=\"alert alert-danger\">\r\n                        {error}\r\n                    </div>\r\n                }\r\n                <div className=\"text-center\">\r\n                    <ButtonWithProgress onClick={onClickLogin} disabled={!buttonEnabled || pendingApiCall} pendingApiCall={pendingApiCall} text={t('Login')}></ButtonWithProgress>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\nimport { changeLanguage } from '../api/apiCalls'\r\n\r\nconst LanguageSelector = (props) => {\r\n    const { i18n } = useTranslation();\r\n    const onChangeLanguage = language => {\r\n        i18n.changeLanguage(language);\r\n        changeLanguage(language);\r\n\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <span className=\"pl-2\">\r\n                <img src=\"https://flagcdn.com/16x12/tr.png\" alt=\"Turkish Flag\" onClick={() => onChangeLanguage('tr')} style={{ cursor: 'pointer' }}></img>\r\n\r\n            </span>\r\n            <span className=\"pl-2\">\r\n                <img src=\"https://flagcdn.com/16x12/us.png\" alt=\"USA Flag\" onClick={() => onChangeLanguage('en')} style={{ cursor: 'pointer' }}></img>\r\n            </span>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default LanguageSelector;","export default __webpack_public_path__ + \"static/media/profile.06c30927.png\";","import React from 'react';\r\nimport defaultPicture from '../assets/profile.png'\r\n\r\nconst ProfileImageWithDefault = (props) => {\r\n    const {image,tempimage} = props;\r\n    let imageSource = defaultPicture;\r\n   \r\n    if (image) {\r\n        imageSource = 'images/profile/'+image;\r\n    }\r\n\r\n    return (\r\n        <img \r\n        alt={`Profile`} \r\n        src={tempimage || imageSource} \r\n        {...props}\r\n        onError={(event)=>{\r\n            event.target.src=defaultPicture\r\n        }} />\r\n            \r\n    );\r\n};\r\n\r\nexport default ProfileImageWithDefault;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from './ButtonWithProgress'\r\nconst Modal = (props) => {\r\n\r\n    const { t } = useTranslation();\r\n    const { visible, onClickCancel, onClickOk, message, pendingApiCall, title, okButton } = props;\r\n\r\n    let className = 'modal fade';\r\n    if (visible) {\r\n        className += ' show d-block';\r\n    }\r\n    return (\r\n        <div className={className} style={{ backgroundColor: '#000000b0' }}>\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" >{title}</h5>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {message}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={onClickCancel}>{t('Cancel')}</button>\r\n                        <ButtonWithProgress type=\"button\" className=\"btn btn-danger\" onClick={onClickOk}\r\n                            pendingApiCall={pendingApiCall}\r\n                            disabled = {pendingApiCall}\r\n                            text={okButton}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'timeago.js'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport { deleteHoax, hoaxDelete } from '../api/apiCalls'\r\nimport Modal from '../components/Modal'\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\n\r\n\r\nconst HoaxView = (props) => {\r\n    const { t } = useTranslation();\r\n    const loggedInUser = useSelector(store => store.username);\r\n    const { hoax, onDeleteHoax } = props;\r\n    const { user, content, timestamp, fileAttachment, id } = hoax;\r\n    const { username, displayName, image } = user;\r\n    const { i18n } = useTranslation();\r\n    const formatted = format(timestamp, i18n.language);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const ownedByLoggedInUser = loggedInUser === username;\r\n\r\n    const pendingApiCall = useApiProgress('delete', `/api/1.0/hoaxes/${id}`);\r\n\r\n    const onClickDelete = async () => {\r\n        await deleteHoax(id);\r\n        onDeleteHoax(id);\r\n    }\r\n\r\n    const onClickCancel = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card p-1\">\r\n                <div className=\"d-flex m-1\">\r\n                    <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle\" />\r\n                    <div className=\"flex-fill m-auto pl-2\">\r\n                        <Link to={`/user/${username}`} className=\"text-dark\">\r\n                            <h6 className=\"d-inline\">\r\n                                {displayName}@{username}\r\n                            </h6>\r\n                            <span> - </span>\r\n                            <span>\r\n                                {formatted}\r\n                            </span>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    {ownedByLoggedInUser && (<button className=\"btn btn-delete-link btn-sm\" onClick={() => setModalVisible(true)}>\r\n                        <span className=\"material-icons\">\r\n                            delete_outline\r\n                    </span>\r\n                    </button>)}\r\n                </div>\r\n                <div className=\"pl-5\">\r\n                    {content}\r\n                </div>\r\n                {fileAttachment && (\r\n                    <div className=\"pl-5\">\r\n                        {fileAttachment.fileType.startsWith('image') && (\r\n                            <img className=\"img-fluid\" src={'images/attachments/' + fileAttachment.name} alt={content} />\r\n                        )}\r\n                        {!fileAttachment.fileType.startsWith('image') && (\r\n                            <strong>Hoax has unknown attachment</strong>\r\n\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n            <Modal visible={modalVisible}\r\n                onClickCancel={onClickCancel}\r\n                onClickOk={onClickDelete}\r\n                title={t('Delete Hoax')}\r\n                okButton={t('Delete Hoax')}\r\n                message={\r\n                    <div>\r\n                        <div>\r\n                            <strong>\r\n                                {t('Are you sure to delete hoax?')}\r\n                            </strong>\r\n                        </div>\r\n                        <span>{content}</span>\r\n                    </div>\r\n                }\r\n                pendingApiCall={pendingApiCall}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HoaxView;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border text-black-50\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React, { useEffect, useState } from 'react';\r\nimport { getHoaxes, getNewHoaxCount, getNewHoaxes, getOldHoaxes } from '../api/apiCalls'\r\nimport { useTranslation } from 'react-i18next'\r\nimport HoaxView from './HoaxView'\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from '../components/Spinner'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nconst HoaxFeed = () => {\r\n\r\n    const { t } = useTranslation();\r\n    const [hoaxPage, setHoaxPage] = useState({ content: [], last: true, number: 0 });\r\n    const [newHoaxCount, setNewHoaxCount] = useState(0);\r\n    const { username } = useParams();\r\n\r\n    const path = username ? `/api/1.0/users/${username}/hoaxes?page=` : '/api/1.0/hoaxes?page=';\r\n    const initialHoaxLoadProgress = useApiProgress('get', path);\r\n\r\n    let lastHoaxId = 0;\r\n    let firstHoaxId = 0;\r\n    if (hoaxPage.content.length > 0) {\r\n        const lastHoaxIndex = hoaxPage.content.length - 1;\r\n        lastHoaxId = hoaxPage.content[lastHoaxIndex].id;\r\n        firstHoaxId = hoaxPage.content[0].id;\r\n    }\r\n    const oldHoaxPath = username ? `/api/1.0/users/${username}/hoaxes/${lastHoaxId}` : '/api/1.0/hoaxes/' + lastHoaxId;\r\n    const loadOldHoaxesProgress = useApiProgress('get', oldHoaxPath, true);\r\n\r\n    const newHoaxPath = username ? `/api/1.0/users/${username}/hoaxes/${firstHoaxId}?direction=after?` : `/api/1.0/hoaxes/${firstHoaxId}?direction=after`;\r\n    const loadNewHoaxesProgress = useApiProgress('get', newHoaxPath, true);\r\n\r\n\r\n    useEffect(() => {\r\n        const getCount = async () => {\r\n            const response = await getNewHoaxCount(firstHoaxId, username);\r\n            setNewHoaxCount(response.data.count);\r\n        }\r\n        let looper = setInterval(getCount, 5000);\r\n\r\n        return function cleanUp() {\r\n            clearInterval(looper);\r\n        }\r\n    }, [firstHoaxId, username]);\r\n\r\n    useEffect(() => {\r\n        const loadHoaxes = async (page) => {\r\n            try {\r\n                const response = await getHoaxes(username, page);\r\n                setHoaxPage(previousHoaxPage => ({\r\n                    ...response.data,\r\n                    content: [...previousHoaxPage.content, ...response.data.content]\r\n                }));\r\n            } catch (error) {\r\n\r\n            }\r\n        };\r\n        loadHoaxes();\r\n    }, [username]);\r\n\r\n\r\n\r\n    const loadOldHoaxes = async () => {\r\n\r\n        try {\r\n            const response = await getOldHoaxes(lastHoaxId, username);\r\n\r\n            setHoaxPage(previousHoaxPage => ({\r\n                ...response.data,\r\n                content: [...previousHoaxPage.content, ...response.data.content]\r\n            }));\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const loadNewHoaxes = async () => {\r\n        const response = await getNewHoaxes(firstHoaxId, username);\r\n        setHoaxPage(previousHoaxPage => ({\r\n            ...previousHoaxPage,\r\n            content: [...response.data, ...previousHoaxPage.content]\r\n        }));\r\n    }\r\n\r\n\r\n    const onDeleteHoaxSuccess = id => {\r\n        setHoaxPage(previousHoaxPage => ({\r\n            ...previousHoaxPage,\r\n            content: previousHoaxPage.content.filter((hoax) => hoax.id!==id)\r\n        }));\r\n    }\r\n\r\n    const { content, last } = hoaxPage;\r\n\r\n    if (content.length === 0) {\r\n        return <div className=\"alert alert-secondary text-center mb-1\">{initialHoaxLoadProgress ? <Spinner /> : t('There are no hoaxes')}</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {newHoaxCount > 0 && <div\r\n                className=\"alert alert-secondary text-center\"\r\n                style={{ cursor: loadNewHoaxesProgress ? 'not-allowed' : 'pointer' }} onClick={loadNewHoaxesProgress ? () => { } : loadNewHoaxes}\r\n            >{loadNewHoaxesProgress ? <Spinner /> : t('There are new hoaxes')}</div>}\r\n            {content.map(hoax => {\r\n                return <HoaxView key={hoax.id} hoax={hoax} onDeleteHoax={onDeleteHoaxSuccess} />\r\n            })\r\n            }\r\n            {!last && <div\r\n                className=\"alert alert-secondary text-center mt-1\" style={{ cursor: loadOldHoaxesProgress ? 'not-allowed' : 'pointer' }} onClick={loadOldHoaxesProgress ? () => { } : loadOldHoaxes} >\r\n                {loadOldHoaxesProgress ? <Spinner /> : t('Load old hoaxes')}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HoaxFeed;","import React from 'react';\r\nimport './AutoUploadImage.css'\r\nconst AutoUploadImage = (props) => {\r\n    const { image, uploading } = props;\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            <img src={image} className=\"img-thumbnail\" alt=\"hoax-attachment\" />\r\n            <div className=\"overlay\" style={{ opacity: uploading ? 1 : 0 }}>\r\n                <div className=\"d-flex justify-content-center h-100\">\r\n                    <div className=\"spinner-border text-light m-auto\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AutoUploadImage;","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport ProfileImageWithDefault from '../components/ProfileImageWithDefault';\r\nimport { postHoax, postHoaxAttachment } from '../api/apiCalls'\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress'\r\nimport Input from '../components/input'\r\nimport AutoUploadImage from './AutoUploadImage';\r\n\r\nconst HoaxSubmit = () => {\r\n    const { image } = useSelector((store) => ({ image: store.image }));\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const [focused, setFocused] = useState(false);\r\n    const [hoax, setHoax] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [newImage, setNewImage] = useState();\r\n    const [attachmentId, setAttachmentId] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        if (!focused) {\r\n            setHoax('');\r\n            setErrors({});\r\n            setNewImage();\r\n            setAttachmentId();\r\n        }\r\n    }, [focused]);\r\n\r\n    useEffect(() => {\r\n        setErrors({});\r\n    }, [hoax]);\r\n\r\n    const pendingApiCall = useApiProgress('post', '/api/1.0/hoaxes', true);\r\n    const pendingFileUpload = useApiProgress('post', '/api/1.0/hoax-attachments', true);\r\n\r\n    const hoaxify = async () => {\r\n        const body = {\r\n            content: hoax,\r\n            attachmentId: attachmentId\r\n        }\r\n\r\n        try {\r\n            await postHoax(body);\r\n            setFocused(false);\r\n        } catch (error) {\r\n            setErrors(error.response.data.validationErrors);\r\n        }\r\n\r\n    };\r\n    const onChangeFile = (event) => {\r\n        if (event.target.files.length < 1) {\r\n            return;\r\n        }\r\n        const file = event.target.files[0];\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            setNewImage(fileReader.result);\r\n            uploadFile(file);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    }\r\n\r\n    const uploadFile = async (file) => {\r\n\r\n        const attachment = new FormData();\r\n        attachment.append('image', file);\r\n        const response = await postHoaxAttachment(attachment);\r\n        setAttachmentId(response.data.id);\r\n    }\r\n\r\n    let textAreaClass = 'form-control';\r\n\r\n    if (errors.content) {\r\n        textAreaClass += ' is-invalid';\r\n    }\r\n    return (\r\n        <div className=\"card p-1 flex-row\">\r\n            <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle mr-1\" />\r\n            <div className=\"flex-fill\">\r\n                <textarea className={textAreaClass} rows={focused ? '3' : '1'} onFocus={() => setFocused(true)} onChange={(event) => { setHoax(event.target.value) }} value={hoax} />\r\n                <div className=\"invalid-feedback\">{errors.content}</div>\r\n                {focused && (\r\n                    <>\r\n                        {!newImage && <Input type=\"file\" onChange={onChangeFile} />}\r\n                        {newImage && <AutoUploadImage image={newImage} uploading={pendingFileUpload} />}\r\n                        <div className=\"text-right mt-1\">\r\n                            <ButtonWithProgress className=\"btn btn-primary\" onClick={hoaxify}\r\n                                text=\"Hoaxify\"\r\n                                pendingApiCall={pendingApiCall}\r\n                                disabled={pendingApiCall || pendingFileUpload}\r\n                            />\r\n                            <button\r\n                                className=\"btn btn-light d-inline-flex ml-1\"\r\n                                onClick={() => setFocused(false)} disabled={pendingApiCall || pendingFileUpload}>\r\n                                <span className=\"material-icons\">close </span>\r\n                                {t('Cancel')}\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HoaxSubmit;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport ProfileImageWithDefault from '../components/ProfileImageWithDefault'\r\n\r\nconst UserListItem = (props) => {\r\n\r\n    const { user } = props;\r\n    const { username, displayName, image} = user\r\n    \r\n\r\n    return (\r\n        <Link to={`/user/${username}`} className=\"list-group-item list-group-item-action\">\r\n            <ProfileImageWithDefault className=\"rounded-circle\"\r\n                                     width=\"32\"\r\n                                     height=\"32\"\r\n                                     alt={`${username} profile`} \r\n                                     image={image} />\r\n            <span className=\"pl-2\">\r\n                {displayName}@{username}\r\n            </span>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default UserListItem;","import React, { useState, useEffect } from 'react';\r\nimport { getUsers } from '../api/apiCalls'\r\nimport { useTranslation } from 'react-i18next'\r\nimport UserListItem from './UserListItem';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from '../components/Spinner'\r\n\r\nconst UserList = () => {\r\n\r\n    const [page, setPage] = useState({\r\n        content: [],\r\n        size: 3,\r\n        number: 0\r\n    });\r\n\r\n    const [loadFailure, setLoadFailure] = useState(false);\r\n    const pendingApiCall = useApiProgress('get','/api/1.0/users?page');\r\n\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = page.number + 1;\r\n        loadUsers(nextPage);\r\n    }\r\n\r\n    const onClickPrevious = () => {\r\n        const previousPage = page.number - 1;\r\n        loadUsers(previousPage);\r\n    }\r\n\r\n    const loadUsers = async page => {\r\n        setLoadFailure(false);\r\n        try {\r\n            const response = await getUsers(page);\r\n            setPage(response.data);\r\n        } catch (error) {\r\n            setLoadFailure(true);\r\n        }\r\n    };\r\n\r\n\r\n    const { t } = useTranslation();\r\n    const { content: users, last, first } = page;\r\n\r\n    let actionDiv = (<div>\r\n        {first === false && <button className=\"btn btn-sm btn-light\" onClick={onClickPrevious}>{t('Previous')}</button>}\r\n        {last === false && <button className=\"btn btn-sm btn-light float-right\" onClick={onClickNext}>{t('Next')}</button>}\r\n    </div>)\r\n\r\n    if (pendingApiCall) {\r\n        actionDiv = (\r\n            <Spinner/>\r\n        )\r\n    }\r\n    return (<div className=\"card\">\r\n        <h3 className=\"card-header text-center\">{t('Users')}</h3>\r\n        <div className=\"list-group-flush\">\r\n            {\r\n                users.map(user => (\r\n                    <UserListItem key={user.username} user={user} />\r\n                ))\r\n            }\r\n        </div>\r\n        {actionDiv}\r\n        {loadFailure && <div className=\"text-center text-danger\">{t('Load Failure')}</div>}\r\n    </div>);\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport HoaxFeed from '../components/HoaxFeed';\r\n\r\nimport HoaxSubmit from '../components/HoaxSubmit';\r\n\r\nimport UserList from '../components/UserList';\r\n\r\nconst HomePage = () => {\r\n\r\n    const { isLoggedIn } = useSelector((store => ({ isLoggedIn: store.isLoggedIn })));\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    {isLoggedIn &&\r\n                        <div className=\"mb-1\">\r\n                            <HoaxSubmit />\r\n                        </div>}\r\n                    <HoaxFeed />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <UserList />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport ProfileImageWithDefault from '../components/ProfileImageWithDefault'\r\nimport { useTranslation } from 'react-i18next';\r\nimport Input from '../components/input'\r\nimport { deleteUser, updateUser } from '../api/apiCalls'\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport { logoutSuccess, updateSuccess } from '../redux/authActions'\r\nimport Modal from '../components/Modal'\r\n\r\nconst ProfileCard = (props) => {\r\n\r\n    const [inEditMode, setInEditMode] = useState(false);\r\n    const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n    const { username: loggedInUsername } = useSelector((store) => ({ username: store.username }))\r\n    const routeParams = useParams();\r\n\r\n    const [user, setUser] = useState({});\r\n\r\n    const [editable, setEditable] = useState(false);\r\n    const [newImage, setNewImage] = useState();\r\n    const [validationErrors, setValidationErrors] = useState({});\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const pathUserName = routeParams.username;\r\n\r\n    useEffect(() => {\r\n        setUser(props.user)\r\n    }, [props.user]);\r\n\r\n    useEffect(() => {\r\n        setEditable(pathUserName === loggedInUsername);\r\n    }, [pathUserName, loggedInUsername]);\r\n\r\n\r\n    useEffect(() => {\r\n        setValidationErrors((previousValidationErrors) => ({\r\n            ...previousValidationErrors,\r\n            displayName: undefined\r\n        })\r\n        );\r\n    }, [updatedDisplayName]);\r\n\r\n    useEffect(() => {\r\n        setValidationErrors((previousValidationErrors) => ({\r\n            ...previousValidationErrors,\r\n            image: undefined\r\n        })\r\n        );\r\n    }, [newImage]);\r\n\r\n    const { username, displayName, image } = user;\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        if (!inEditMode) {\r\n            setUpdatedDisplayName(undefined);\r\n            setNewImage(undefined);\r\n        } else {\r\n            setUpdatedDisplayName(displayName);\r\n        }\r\n    }, [inEditMode, displayName]);\r\n\r\n\r\n    const onClickSave = async () => {\r\n        let image;\r\n        if (newImage) {\r\n            image = newImage.split(',')[1]\r\n        }\r\n        const body = {\r\n            displayName: updatedDisplayName,\r\n            image\r\n        };\r\n        try {\r\n            const response = await updateUser(username, body);\r\n            setInEditMode(false);\r\n            setUser(response.data);\r\n            dispatch(updateSuccess(response.data));\r\n        } catch (error) {\r\n            setValidationErrors(error.response.data.validationErrors);\r\n        }\r\n\r\n    }\r\n\r\n    const onChangeFile = (event) => {\r\n        if (event.target.files.length < 1) {\r\n            return;\r\n        }\r\n        const file = event.target.files[0];\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            setNewImage(fileReader.result);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    }\r\n\r\n    const pendingApiCall = useApiProgress('put', '/api/1.0/users/' + username);\r\n\r\n    const pendingDeleteUserApiCall = useApiProgress('delete', `/api/1.0/users/${username}`, true);\r\n\r\n\r\n    const { displayName: displayNameError, image: imageError } = validationErrors;\r\n\r\n\r\n    const onClickDelete = async () => {\r\n        await deleteUser(username);\r\n        setModalVisible(false);\r\n        dispatch(logoutSuccess());\r\n        history.push('/');\r\n    }\r\n\r\n    const onClickCancel = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card text-center\">\r\n            <div className=\"card-header\">\r\n                <ProfileImageWithDefault\r\n                    className=\"rounded-circle shadow\"\r\n                    width=\"200\"\r\n                    height=\"200\"\r\n                    alt={`${username} profile`}\r\n                    image={image}\r\n                    tempimage={newImage}\r\n                />\r\n            </div>\r\n            <div className=\"card-body\">\r\n                {!inEditMode &&\r\n                    (\r\n                        <>\r\n                            <h3>{displayName}@{username}</h3>\r\n                            {editable &&\r\n                                <>\r\n                                    <button className=\"btn btn-success d-inline-flex\" onClick={() => setInEditMode(true)}>\r\n                                        <span className=\"material-icons\">edit</span>\r\n                                        {t('Edit')}\r\n                                    </button>\r\n                                    <div className=\"pt-2\">\r\n                                        <button className=\"btn btn-danger d-inline-flex\" onClick={() => { setModalVisible(true); }}>\r\n                                            <span className=\"material-icons\">directions_run</span>\r\n                                            {t('Delete My Account')}\r\n                                        </button>\r\n                                    </div>\r\n                                </>\r\n\r\n                            }\r\n                        </>)\r\n                }\r\n                {inEditMode &&\r\n                    (\r\n                        <div>\r\n\r\n                            <Input label={t(\"Change Display Name\")} defaultValue={displayName} onChange={(event) => { setUpdatedDisplayName(event.target.value); }}\r\n                                error={displayNameError}\r\n                            />\r\n                            <Input type=\"file\" onChange={onChangeFile} error={imageError} />\r\n                            <div>\r\n                                <ButtonWithProgress\r\n                                    className=\"btn btn-primary d-inline-flex\"\r\n                                    onClick={onClickSave}\r\n                                    disabled={pendingApiCall}\r\n                                    pendingApiCall={pendingApiCall}\r\n                                    text={\r\n                                        <>\r\n                                            <span className=\"material-icons\">save</span>\r\n                                            {t('Save')}\r\n                                        </>\r\n                                    }\r\n                                />\r\n\r\n                                <button\r\n                                    className=\"btn btn-light d-inline-flex ml-1\"\r\n                                    onClick={() => setInEditMode(false)}\r\n                                    disabled={pendingApiCall}>\r\n                                    <span className=\"material-icons\">close </span>\r\n                                    {t('Cancel')}\r\n                                </button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n            </div>\r\n            <Modal visible={modalVisible}\r\n                onClickCancel={onClickCancel}\r\n                onClickOk={onClickDelete}\r\n                message={t('Are you sure to delete your account?')}\r\n                title={t('Delete My Account')}\r\n                okButton={t('Delete My Account')}\r\n                pendingApiCall={pendingDeleteUserApiCall}\r\n            />\r\n        </div >\r\n    );\r\n};\r\n\r\n\r\nexport default ProfileCard;","import React, { useEffect, useState } from 'react';\r\nimport ProfileCard from '../components/ProfileCard'\r\nimport { getUser } from '../api/apiCalls'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useApiProgress } from '../shared/ApiProgress'\r\nimport Spinner from '../components/Spinner'\r\nimport HoaxFeed from '../components/HoaxFeed'\r\n\r\nconst UserPage = (props) => {\r\n\r\n    const [user, setUser] = useState({});\r\n    const [notFound, setNotFound] = useState(false);\r\n\r\n    const { username } = useParams();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const pendingApiCall = useApiProgress('get', '/api/1.0/users/' + username, true);\r\n\r\n    useEffect(() => {\r\n        setNotFound(false);\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        const loadUser = async () => {\r\n            try {\r\n                const response = await getUser(username);\r\n                setUser(response.data);\r\n            } catch (error) {\r\n                setNotFound(true);\r\n            }\r\n        }\r\n        loadUser();\r\n    }, [username]);\r\n\r\n    if (notFound) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"alert alert-danger text-center\">\r\n                    <div>\r\n                        <span className=\"material-icons\" style={{ fontSize: '48px' }}>\r\n                            error\r\n                    </span>\r\n                    </div>\r\n                    {t('User not found')}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    if (pendingApiCall || user.username !== username) {\r\n        return (\r\n            <Spinner />\r\n        );\r\n    }\r\n   \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"column\">\r\n                    <ProfileCard user={user} />\r\n                </div>\r\n                <div className=\"column\">\r\n                    <HoaxFeed />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPage;","export default __webpack_public_path__ + \"static/media/hoaxify.e76cb420.png\";","import React, {useEffect, useState, useRef} from 'react';\r\nimport logo from '../assets/hoaxify.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import {Authentication} from '../shared/AuthenticationContext'\r\nimport { logoutSuccess } from '../redux/authActions'\r\nimport ProfileImageWithDefault from '../components/ProfileImageWithDefault'\r\n\r\nconst TopBar = props => {\r\n\r\n    const { t } = useTranslation();\r\n    const { username, isLoggedIn, displayName, image } = useSelector((store) => ({\r\n        isLoggedIn: store.isLoggedIn,\r\n        username: store.username,\r\n        displayName: store.displayName,\r\n        image: store.image\r\n    }));\r\n\r\n\r\n    const menuArea = useRef();\r\n\r\n    const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', menuClickTracker);\r\n        return () => {\r\n            document.removeEventListener('click', menuClickTracker);\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n    const menuClickTracker = (event) => {\r\n        if(menuArea.current !==undefined && ( menuArea.current === null || !menuArea.current.contains(event.target))){\r\n            setMenuVisible(false);\r\n        }\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogoutSuccess = () => {\r\n        dispatch(logoutSuccess());\r\n    }\r\n\r\n    let links = (<ul className=\"navbar-nav ml-auto\">\r\n        <li>\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n                {t('Login')}\r\n            </Link>\r\n        </li>\r\n\r\n        <li>\r\n            <Link className=\"nav-link\" to=\"/signup\">\r\n                {t('Sign Up')}\r\n            </Link></li>\r\n    </ul>);\r\n\r\n    if (isLoggedIn) {\r\n        let dropDownClass = \"dropdown-menu p-0 shadow\";\r\n        if(menuVisible){\r\n            dropDownClass = \"dropdown-menu p-0 shadow show\";\r\n        }\r\n        links = (<ul className=\"navbar-nav ml-auto\" ref={menuArea}>\r\n            <li className=\"nav-item dropdown\">\r\n                <div className=\"d-flex\" style={{ cursor: 'pointer' }} onClick={() => setMenuVisible(true)}>\r\n                    <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle m-auto\" />\r\n                    <span className=\"nav-link nav-link dropdown-toggle\">{displayName}</span>\r\n                </div>\r\n                <div className={dropDownClass}>\r\n                    <Link className=\"dropdown-item d-flex p-2\" to={\"/user/\" + username} onClick={() => setMenuVisible(false)}>\r\n                        <span className=\"material-icons text-info mr-2\">person</span>\r\n                        {t('My Profile')}\r\n                    </Link>\r\n                    <span className=\"dropdown-item d-flex p-2\" onClick={onLogoutSuccess} style={{ cursor: 'pointer' }}>\r\n                    <span className=\"material-icons text-danger mr-2\">power_settings_new</span>\r\n                        {t('Logout')}\r\n                    </span>\r\n                </div>\r\n            </li>\r\n        </ul>);\r\n    }\r\n    return (\r\n        <div className=\"shadow-sm bg-light mb-2\">\r\n            <nav className=\"navbar navbar-light bg-light container navbar-expand\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    <img src={logo} width=\"60\" alt=\"Hoaxify Logo\" />\r\n                                    Hoaxify</Link>\r\n\r\n                {links}\r\n            </nav>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default TopBar;","\nimport React from 'react'\nimport ApiProgress from '../shared/ApiProgress'\nimport UserSignUpPage from '../pages/UserSignUpPage'\nimport LoginPage from '../pages/LoginPage'\nimport LanguageSelector from '../components/LanguageSelector'\nimport HomePage from '../pages/HomePage'\nimport UserPage from '../pages/UserPage'\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\nimport TopBar from '../components/TopBar'\nimport { useSelector } from 'react-redux'\n\n\nconst App = () => {\n\n  const { isLoggedIn } = useSelector(store => ({\n    isLoggedIn: store.isLoggedIn\n  }));\n\n    return (\n      <div>\n        <Router>\n          <TopBar/>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            {!isLoggedIn && (<Route path=\"/login\" component={LoginPage} />)}\n            <Route path=\"/signup\" component={UserSignUpPage} />\n            <Route path=\"/user/:username\" component={UserPage} />\n            <Redirect to=\"/\" />\n          </Switch>\n\n        </Router>\n        <LanguageSelector />\n      </div>\n\n    );\n  \n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next'\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport {register} from 'timeago.js'\r\n\r\ni18n.use(initReactI18next).init({\r\n    resources: {\r\n        en: {\r\n            translations: {\r\n                'Sign Up': 'Sign Up',\r\n                'Password mismatch': 'Password mismatch',\r\n                'User Name': 'User Name',\r\n                'Display Name': 'Display Name',\r\n                'Password': 'Password',\r\n                'Password Repeat': 'Password Repeat',\r\n                'Login': 'Login',\r\n                'Unauthorized': 'Unauthorized',\r\n                'Logout': 'Logout',\r\n                'Users': 'Users',\r\n                'Next': 'Next >',\r\n                'Previous': '< Previous',\r\n                'Load Failure': 'Load Failure',\r\n                'User not found': 'User not found',\r\n                'Edit': 'Edit',\r\n                'Save': 'Save',\r\n                'Cancel': 'Cancel',\r\n                'Change Display Name':'Change Display Name',\r\n                'My Profile': 'My Profile',\r\n                'There are no hoaxes': 'There are no hoaxes',\r\n                'Load old hoaxes':'Load old hoaxes',\r\n                'There are new hoaxes':'There are new hoaxes',\r\n                'Delete Hoax': 'Delete Hoax',\r\n                'Are you sure to delete hoax?':'Are you sure to delete hoax?',\r\n                'Are you sure to delete your account?': 'Are you sure to delete your account?',\r\n                'Delete My Account':'Delete My Account'\r\n            }\r\n        },\r\n        tr: {\r\n            translations: {\r\n                'Sign Up': 'Kayıt Ol',\r\n                'Password mismatch': 'Aynı şifreyi giriniz',\r\n                'User Name': 'Kullanıcı adı',\r\n                'Display Name': 'Tercih edilen isim',\r\n                'Password': 'Şifre',\r\n                'Password Repeat': 'Şifre Tekrarla',\r\n                'Login': 'Sisteme Gir',\r\n                'Unauthorized': 'Yetkisiz',\r\n                'Logout': 'Çık',\r\n                'Users': 'Kullanıcılar',\r\n                'Next': 'Sonraki >',\r\n                'Previous': '< Önceki',\r\n                'Load Failure': 'Liste alınamadı',\r\n                'User not found': 'Kullanıcı bulunamadı',\r\n                'Edit': 'Düzenle',\r\n                'Save': 'Kaydet',\r\n                'Cancel': 'İptal Et',\r\n                'Change Display Name':'Görünür isminizi değiştirin',\r\n                'My Profile': 'Hesabım',\r\n                'There are no hoaxes': 'Hoax bulunamadı',\r\n                'Load old hoaxes':'Eski hoaxları getir',\r\n                'There are new hoaxes': 'Yeni hoaxlar var',\r\n                'Delete Hoax':`Hoax'ı sil`,\r\n                'Are you sure to delete hoax?': `Hoax'ı silmek istediğinizden emin misiniz?`,\r\n                'Are you sure to delete your account?':'Hesabınızı silmek istediğinizden emin misiniz?',\r\n                'Delete My Account':'Hesabımı sil'\r\n            }\r\n        }\r\n    },\r\n    fallbackLng: 'tr',\r\n    ns: ['translations'],\r\n    defaultNS: 'translations',\r\n    keySeparator: false,\r\n    interpolation: {\r\n        escapeValue: false,\r\n        formatSeparator: ',',\r\n    },\r\n    react: {\r\n        wait: true\r\n    }\r\n});\r\n\r\nconst timeagoTR = (number, index) => {\r\n    return [\r\n      ['az önce', 'şimdi'],\r\n      ['%s saniye önce', '%s saniye içinde'],\r\n      ['1 dakika önce', '1 dakika içinde'],\r\n      ['%s dakika önce', '%s dakika içinde'],\r\n      ['1 saat önce', '1 saat içinde'],\r\n      ['%s saat önce', '%s saat içinde'],\r\n      ['1 gün önce', '1 gün içinde'],\r\n      ['%s gün önce', '%s gün içinde'],\r\n      ['1 hafta önce', '1 hafta içinde'],\r\n      ['%s hafta önce', '%s hafta içinde'],\r\n      ['1 ay önce', '1 ay içinde'],\r\n      ['%s ay önce', '%s ay içinde'],\r\n      ['1 yıl önce', '1 yıl içinde'],\r\n      ['%s yıl önce', '%s yıl içinde'],\r\n    ][index];\r\n  }\r\n\r\n  register('tr', timeagoTR);\r\n\r\nexport default i18n;","import * as ACTIONS from './Constants'\r\n\r\nconst defaultState = {\r\n    isLoggedIn: false,\r\n    username: undefined,\r\n    displayName: undefined,\r\n    image: null,\r\n    password: undefined\r\n  \r\n  }\r\n  \r\n  const authReducer = (state = {...defaultState}, action) => {\r\n    if (action.type === ACTIONS.LOGOUT_SUCCESS) {\r\n      return defaultState;\r\n    }else if (action.type === ACTIONS.LOGIN_SUCCESS) {\r\n      return {\r\n        ...action.payload,\r\n        isLoggedIn:true\r\n      }\r\n    }else if( action.type === ACTIONS.UPDATE_SUCCESS){\r\n      return {\r\n        ...state,\r\n        ...action.payload \r\n      }\r\n    }\r\n    return state;\r\n  };\r\n\r\n  export default authReducer;\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport authReducer from './authReducer'\r\nimport SecureLS from 'secure-ls'\r\nimport thunk from 'redux-thunk'\r\nimport { setAuthorizationHeader } from '../api/apiCalls';\r\n\r\nconst secureLs = new SecureLS();\r\n\r\nconst loggedInState = {\r\n    isLoggedIn: true,\r\n    username: 'user1',\r\n    displayName: 'display1',\r\n    image: null,\r\n    password: 'P4ssword'\r\n\r\n}\r\n\r\nconst getStateFromStorage = () => {\r\n    const hoaxAuth = secureLs.get('hoax-auth');\r\n\r\n    let stateInLocalStorage = {\r\n        isLoggedIn: false,\r\n        username: undefined,\r\n        displayName: undefined,\r\n        image: null,\r\n        password: undefined\r\n    }\r\n    if (hoaxAuth) {\r\n        return hoaxAuth;\r\n    }\r\n\r\n    return stateInLocalStorage;\r\n}\r\n\r\nconst updateStateInStorage = newState => {\r\n    secureLs.set('hoax-auth', newState);\r\n}\r\n\r\n\r\nconst configureStore = () => {\r\n    const initialState = getStateFromStorage();\r\n    setAuthorizationHeader(initialState);\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const store = createStore(authReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n    store.subscribe(() => {\r\n        updateStateInStorage(store.getState());\r\n        setAuthorizationHeader(store.getState());\r\n    })\r\n\r\n    return store;\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap-override.scss';\nimport App from './container/App'\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\nimport { Provider } from 'react-redux'\nimport configureStore from './redux/configureStore';\n\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}